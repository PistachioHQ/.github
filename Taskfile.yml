version: '3'

tasks:
  setup:
    desc: "Setup development environment"
    cmds:
      - task: setup:signing
      - task: check:commitlint
      - task: setup:commitlint-config
      - task: setup:hooks
    
  setup:signing:
    desc: "Configure SSH commit signing"
    cmds:
      - |
        echo "Configuring commit signing..."
        
        ALLOWED_DOMAINS="@pistachiohq.com"
        
        git config commit.gpgsign true
        git config gpg.format ssh
        
        EMAIL=$(git config user.email)
        SIGNING_KEY=$(git config user.signingkey)
        
        if [[ -z "$EMAIL" ]] || [[ -z "$SIGNING_KEY" ]]; then
          echo "Error: Missing configuration"
          echo "Run: git config --global user.email your-email@pistachiohq.com"
          echo "Run: git config --global user.signingkey ~/.ssh/id_ed25519.pub"
          exit 1
        fi
        
        VALID_DOMAIN=false
        for domain in $ALLOWED_DOMAINS; do
          if [[ "$EMAIL" == *"$domain" ]]; then
            VALID_DOMAIN=true
            break
          fi
        done
        
        if [[ "$VALID_DOMAIN" != "true" ]]; then
          echo "Error: Email '$EMAIL' is not from an authorized domain"
          echo "Allowed domains: $ALLOWED_DOMAINS"
          echo "Run: git config --global user.email your-email@pistachiohq.com"
          exit 1
        fi
        
        mkdir -p .git

        if [[ -f "$SIGNING_KEY" ]]; then
          echo "$EMAIL $(cat $SIGNING_KEY)" > .git/allowed_signers
        else
          echo "$EMAIL $SIGNING_KEY" > .git/allowed_signers
        fi
        
        git config gpg.ssh.allowedSignersFile .git/allowed_signers
        
        echo "✓ SSH signing configured for $EMAIL"
    status:
      - test -f .git/allowed_signers
      - git config --get gpg.ssh.allowedSignersFile | grep -q ".git/allowed_signers"
    
  check:cocogitto:
    desc: "Check if cocogitto is installed"
    cmds:
      - |
        if ! command -v cog >/dev/null 2>&1; then
          echo "⚠️  cocogitto not found"
          echo "Please install: brew install cocogitto"
          echo "Or: cargo install cocogitto"
        fi
    silent: true
    
  setup:cocogitto-config:
    desc: "Setup cocogitto configuration"
    cmds:
      - |
        echo '# Cocogitto configuration
        # https://docs.cocogitto.io/config

        [commit_types]
        build = { changelog_title = "Build System" }
        chore = { changelog_title = "Chores" }
        ci = { changelog_title = "Continuous Integration" }
        docs = { changelog_title = "Documentation" }
        feat = { changelog_title = "Features" }
        fix = { changelog_title = "Bug Fixes" }
        perf = { changelog_title = "Performance" }
        refactor = { changelog_title = "Refactoring" }
        revert = { changelog_title = "Reverts" }
        style = { changelog_title = "Styles" }
        test = { changelog_title = "Tests" }
        
        [commit_scopes]
        auth = {}
        api = {}
        ui = {}
        docs = {}
        deps = {}
        
        [changelog]
        path = "CHANGELOG.md"
        template = "default"
        
        [bump_profiles]
        default = { build = "patch", chore = "patch" }
        ' > cog.toml
    status:
      - test -f cog.toml

  setup:hooks:
    desc: "Install git hooks via lefthook"
    cmds:
      - lefthook install
    status:
      - test -f .git/hooks/prepare-commit-msg || test -f .git/hooks/lefthook-run
